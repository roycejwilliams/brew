// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-py"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id  String  @id @default(uuid())
  phoneNumber String @unique
  email String @unique 
  username String @unique
  otp String?
  passwordHash String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  profile Profile? 
  invitesSent Invite[] @relation("InvitesSent")
  invitesUsed Invite[] @relation("InvitesUsed")
  eventsCreated Event[] 
  attendees Attendee[] 
}

model Profile {
  id String @id @default(uuid())
  userId String @unique
  user User @relation(fields: [userId], references: [id])
  fullName String
  bio String?
  avatarUrl String?
  location String?
}

model Event {
  id String @id @default(uuid())
  creatorId String 
  creator User @relation(fields: [creatorId], references: [id])
  title String
  description String
  date DateTime
  location String?
  createdAt DateTime @default(now())
  attendees Attendee[]
}

model Attendee { 
  id String @id @default(uuid())
  userId String
  eventId String 
  user User @relation(fields: [userId], references: [id])
  event Event @relation(fields: [eventId], references: [id])
  joinedAt DateTime @default(now())

  @@unique([userId, eventId]) //one entry per user/event
}

model Invite {
  id          String   @id @default(uuid())
  code        String   @unique
  createdById String
  createdBy   User     @relation("InvitesSent", fields: [createdById], references: [id])
  usedById    String?  
  usedBy      User?    @relation("InvitesUsed", fields: [usedById], references: [id])
  createdAt   DateTime @default(now())
  usedAt      DateTime?
}